\NeedsTeXFormat{LaTeX2e} %chktex 44
\ProvidesPackage{siunit-setup}
% chktex-file 1
% chktex-file 2

\RequirePackage{siunitx}
\sisetup{
  mode=match,
  range-phrase=--,
  product-units=single,
  uncertainty-mode=separate,
  separate-uncertainty-units=single,
  reset-text-series=false,  % when needing to print bold (in text mode)
  reset-text-family=false,
  reset-text-shape=false,
}


% Define a new command to emulate \approx without going into math mode.
% SiUnitx does not like it, so use it before \num and friends.
% This essentially allows the approx sign (which is only defined in math fonts)
% to be used next to numbers in text font (if we don't use fulloldstyle).
\newcommand*\tapprox{\hbox{$∿$}}
% could also be ≈
% could also be {\setmainfont{XCharter-Math}≈}

\ExplSyntaxOn

\DeclareSIUnit \mgm {\milli\gram\per\cubic\metre}
\DeclareSIUnit \mugm {\micro\gram\per\cubic\metre}

\DeclareSIUnit \pixel {\text{px}}
\DeclareSIUnit \pixels {\text{pixels}}
\DeclareSIUnit \bits {\text{bits}}
\DeclareSIUnit \jours {\text{jours}}

\DeclareSIUnit \carbone {\text{CO\textosf{2}}}
\DeclareSIUnit [inter-unit-product={}] \tcarbone {\tonne\carbone}

\DeclareSIUnit \octet {\text{o}}
\DeclareSIUnit \ko {\kilo\octet}
\DeclareSIUnit \Mo {\mega\octet}
\DeclareSIUnit \Go {\giga\octet}
\DeclareSIUnit \To {\tera\octet}
\DeclareSIUnit \byte {\text{B}}
\DeclareSIUnit \kB {\kilo\byte}
\DeclareSIUnit \MB {\mega\byte}
\DeclareSIUnit \GB {\giga\byte}
\DeclareSIUnit \TB {\tera\byte}


% Nice inline fraction with degree sign
\NewDocumentCommand \resol { m m } {
  \qty [parse-numbers=false] {\slashfrac {#1} {#2}} {\degree}
}

% Shortcut for percent value
\NewDocumentCommand \pct { o m } {
  \qty [#1] {#2} {\percent}
}

% Shortcut for temperature value
\NewDocumentCommand \tC { o m } {
  \qty [#1] {#2} {\degreeCelsius}
}

\NewDocumentEnvironment {siunitText} {}
{
  \tl_set_eq:NN \l_save_number_mode_tl \l__siunitx_print_number_mode_tl
  \tl_set_eq:NN \l_save_unit_mode_tl \l__siunitx_print_unit_mode_tl
  \tl_set:Nn \l__siunitx_print_number_mode_tl {text}
  \tl_set:Nn \l__siunitx_print_unit_mode_tl {text}
}{
  \tl_set_eq:NN \l__siunitx_print_number_mode_tl \l_save_number_mode_tl
  \tl_set_eq:NN \l__siunitx_print_unit_mode_tl \l_save_unit_mode_tl
}


%%% Lat/Lon commands
% Command for typesetting latitude or longitude value
% Input should be a number to send to \ang followed by one of NSWE.
\DeclareSIUnit \latlon_degN {\text{\textdegree N}}
\DeclareSIUnit \latlon_degS {\text{\textdegree S}}
\DeclareSIUnit \latlon_degW {\text{\textdegree W}}
\DeclareSIUnit \latlon_degE {\text{\textdegree E}}

% Command for typesetting latitude or longitude value
% Input should be a number to send to \ang followed by one of NSWE.
\msg_new:nnn {ch-thesis} {latlon-invalid-end} {\\latlon\ argument\ should\ end\ with\ [NSWE]\ (found\ `#1')}

\tl_new:N \latlon__tmp_number_tl
\tl_new:N \latlon__tmp_unit_tl

% Separate number and units into sequence
\cs_set:Npn \latlon__sep_unit:n #1 {
  \tl_set:Nx \latlon__tmp_unit_tl { \tl_item:nn {#1} {-1} }
  \tl_if_in:noTF {NSWE} {\latlon__tmp_unit_tl} {
    \tl_set:Nx \latlon__tmp_number_tl { \tl_range:nnn {#1} {1} {-2} }
    \tl_set:Nx \latlon__tmp_unit_tl { \use:c { latlon_deg \latlon__tmp_unit_tl } }
  }{
    \tl_set:Nx \latlon__tmp_number_tl {#1}
    \tl_set:Nn \latlon__tmp_unit_tl {}
  }
}

\NewDocumentCommand \latlon { O{mode=math} m } {
  \latlon__sep_unit:n {#2}
  \qty[#1]
    { \latlon__tmp_number_tl }
    { \latlon__tmp_unit_tl }
}

% % Typesetting a box in lat/lon range (like 16°N-32°N)
% % {5S}{10N} -> 5°S -- 10°N
% % {10}{20N} -> 10 -- 20°N
% % {10N}{20N} -> 10°N -- 20°N
\NewDocumentCommand \latlonRange { O{mode=math} m m } {
  \latlon__sep_unit:n {#2}
  \tl_if_empty:NTF \latlon__tmp_unit_tl {
    \num [#1] { \latlon__tmp_number_tl }
  }{
    \qty [#1]
      { \latlon__tmp_number_tl }
      { \latlon__tmp_unit_tl }
  }
  \textendash
  \latlon__sep_unit:n {#3}
  \qty [#1]
    { \latlon__tmp_number_tl }
    { \latlon__tmp_unit_tl }
}

\ExplSyntaxOff
